import { schemaExists, validateOptions } from "../../Utils/UserValidation.js";
import DB from "../../schemas/LevelDB.js";
import { Level } from "./Level.js";
import { XP } from "./XP.js";
export class User {
    #options;
    level;
    xp;
    /**
     * Initialise a new user instance
     * @param {{ guildId: string, userId: string }} options
     */
    constructor(options) {
        const validate = validateOptions(options);
        if (validate.invalid)
            throw new TypeError(validate.error);
        this.#options = options;
        this.level = new Level(options);
        this.xp = new XP(options);
    }
    /**
     * Delete the user from the database
     * @returns {boolean | null}
     */
    delete() {
        return new Promise(async (res, rej) => {
            if (!await schemaExists(this.#options))
                return res(null);
            await DB.findOneAndDelete({ guildId: this.#options.guildId, userId: this.#options.userId });
            return res(true);
        });
    }
}
